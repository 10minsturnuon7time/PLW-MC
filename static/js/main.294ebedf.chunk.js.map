{"version":3,"sources":["component/start-page/StartPage.js","component/game-page/WordCard.js","component/game-page/WordCardTr.js","component/game-page/AnswerField.js","component/game-page/Timer.js","component/game-page/GamePage.js","component/start-page/EndPage.js","App.js","serviceWorker.js","index.js"],"names":["StartPage","startGame","_this","props","onGameStart","WelcomePhrase","t","Date","getHours","react_default","a","createElement","className","this","onClick","Component","WordCard","state","correct","_this2","Fragment","e","wordClick","word","target","classList","add","addEventListener","remove","WordCardTr","WordSubList","list","map","w","component_game_page_WordCard","key","wordList","i","length","slice","console","log","AnswerField","printanswer","result","rightquestion","timesout","correctAns","split","celltype","push","showCount","rightindex","answerindex","questionlength","value","giveTips","Math","floor","correctCount","document","getElementById","getElementsByClassName","style","backgroundColor","children","id","xmlns","viewBox","points","fill","stroke","strokeWidth","strokeLinejoin","strokeMiterlimit","Timer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","time","timeLimit","set","setState","pause","intval","setInterval","x","running","clearInterval","onTimeOut","GamePage","printquestion","tmp","question","Array","from","index","ans_length","correct_count","c","counter","data","pages","image_src","answers","Set","originAnsArr","quesScore","score","correctans","wrong_click_count","timeOut","totalScore","scorePerQues","n","j","random","elms","onGameFinish","jumpToNextPage","q","states","me","getGameQuestion","bind","component_game_page_WordCardTr","onWordClick","component_game_page_AnswerField","wrongCount","src","game_page_Timer","time_limit","GameMain","EndPage","endGame","SCORM","save","quit","restartGame","onGameRestart","finalScore","App","titleName","pageName","gamePageCounter","jumpToPage","title","page","submitToScorm","scoreArr","totalQNum","get","parseInt","totalFullScore","Tbody","component_start_page_StartPage","Questiondata","component_game_page_GamePage","component_start_page_EndPage","init","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.294ebedf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './StartPage.css'\r\n\r\nclass StartPage extends Component {\r\n\r\n  startGame = () => {\r\n    this.props.onGameStart('普樂網 demo', 'GamePage');\r\n  }\r\n  WelcomePhrase = () => {\r\n    var t = new Date().getHours();\r\n    var phrase = \"\";\r\n    if(t < 6 || t >= 18) {\r\n      phrase = \"Good Night\";\r\n    }\r\n    else if(t >= 6 && t < 12) {\r\n      phrase = \"Good Morning\";\r\n    }\r\n    else {\r\n      phrase = \"Good Afternoon\";\r\n    }\r\n    return phrase;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr className=\"start-page-top\">\r\n        <td>\r\n          <h1 className=\"start-page-welcomePhrase\"><this.WelcomePhrase/></h1>\r\n          <div className=\"start-page-startButton\" onClick={this.startGame}><h3>Start</h3></div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartPage;\r\n","import React, { Component } from 'react';\r\nimport './WordCard.css';\r\n\r\nclass WordCard extends Component {\r\n state = {\r\n    \"correct\" : true\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <>\r\n    <td>\r\n      <div className=\"wordcard-container\" onClick={(e) => {\r\n        if(!this.props.wordClick(this.props.word)) {\r\n          e.target.classList.add(\"wrong-click\");\r\n          e.target.addEventListener(\"animationend\", function(e) {\r\n            e.target.classList.remove(\"wrong-click\");\r\n          });\r\n        }\r\n        }\r\n      }>\r\n      {this.props.word}\r\n      </div>\r\n    </td>\r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WordCard;\r\n","import React, { Component } from 'react';\r\nimport './WordCardTr.css';\r\nimport WordCard from './WordCard.js';\r\n\r\nclass WordCardTr extends Component {\r\n  WordSubList = (props) => {\r\n    return (\r\n      <>\r\n        <tr className=\"wordsublist\">\r\n          {props.list.map(w => (\r\n            <WordCard word={w} wordClick={props.wordClick} key={w}/>\r\n          ))}\r\n        </tr>\r\n      </>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    var wordList = [];\r\n    wordList[0] = this.props.wordList;\r\n    for(var i = 0; i < this.props.wordList.length / 5; i++) {\r\n      wordList[i] = this.props.wordList.slice(i * 5, (i+1) * 5);\r\n      console.log(wordList[i]);\r\n    }\r\n\r\n    return (\r\n      wordList.map((list, i) => {\r\n        return (\r\n          <this.WordSubList list={list} wordClick={this.props.wordClick} key={i}/>\r\n        )\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport default WordCardTr;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"./AnswerField.css\";\r\n\r\nclass AnswerField extends Component {\r\n  printanswer = () => {\r\n    var result = [\"\"];\r\n\r\n    if (this.props.rightquestion === \"\"){//if just answer all words\r\n    if (this.props.timesout) {\r\n      this.props.correctAns.map((w, i) => {\r\n        if (w.split(\"\").length === 1) var celltype = \"ans-cell\";\r\n        else var celltype = \"ans-2cell\";\r\n\r\n        result.push(<div className={celltype}>{w}</div>);\r\n      });\r\n    } else {\r\n      console.log(this.props.rightquestion);\r\n       {\r\n        this.props.correctAns.map((w, i) => {\r\n          result.push(\r\n            <div\r\n              className={\r\n                w.split(\"\").length != 1 && i < this.showCount\r\n                  ? \"ans-2cell\"\r\n                  : \"ans-cell\"\r\n              }\r\n            >\r\n              {\" \"}\r\n              {i < this.showCount ? w : \" \"}{\" \"}\r\n            </div>\r\n          );\r\n        });\r\n      }\r\n    }}\r\n    else{\r\n      if (this.props.timesout) {\r\n        for(let i=0, rightindex=0, answerindex=0;i<this.props.questionlength;i++)\r\n        { \r\n          var value=\"\";\r\n          if(i===this.props.rightquestion[rightindex])\r\n          {\r\n            var celltype=\"ans-cell\";\r\n            rightindex++;\r\n            \r\n               value=this.props.correctAns[answerindex];\r\n              answerindex++;\r\n\r\n            \r\n\r\n          }\r\n          else{\r\n            var celltype=\"ans-spacecell\";}\r\n\r\n            result.push(<div className={celltype}>{value}</div>);\r\n\r\n        }}\r\n        else{\r\n          for(let i=0, rightindex=0, answerindex=0;i<this.props.questionlength;i++)\r\n          { \r\n            var value=\"\";\r\n            if(i===this.props.rightquestion[rightindex])\r\n            {\r\n              var celltype=\"ans-cell\";\r\n              rightindex++;\r\n              if (rightindex<=this.showCount){\r\n                 value=this.props.correctAns[answerindex];\r\n                answerindex++;\r\n\r\n              }\r\n\r\n            }\r\n            else{\r\n              var celltype=\"ans-spacecell\";}\r\n\r\n              result.push(<div className={celltype}>{value}</div>);\r\n\r\n          }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log(result);\r\n    return result;\r\n  };\r\n\r\n  showCount = 0;\r\n  render() {\r\n    this.showCount = this.props.giveTips\r\n      ? Math.floor(this.props.correctAns.length / 2) + this.props.correctCount\r\n      : this.props.correctCount;\r\n    if (this.showCount >= this.props.correctAns.length) {\r\n      document.getElementById(\"trigger\").classList.add(\"drawn\");\r\n    } else if (this.props.timesout) {\r\n      document.getElementsByClassName(\r\n        \"answerFieldTable\"\r\n      )[0].style.backgroundColor = \"red\";\r\n    }\r\n    if (this.props.giveTips) {\r\n      for (var i = 0,rightindex=0, answerindex=0 ;i < Math.floor(this.props.correctAns.length / 2); i++) {\r\n        if (this.props.rightquestion===\"\")\r\n        document.getElementsByClassName(\r\n          \"answerFieldTable\"\r\n        )[0].children[0].children[0].children[i].style.backgroundColor = \"grey\";\r\n          else{\r\n            document.getElementsByClassName(\r\n              \"answerFieldTable\"\r\n            )[0].children[0].children[0].children[this.props.rightquestion[i]].style.backgroundColor = \"grey\";\r\n\r\n         \r\n      }\r\n    }}\r\n\r\n    return (\r\n      <>\r\n        <table className=\"answerFieldTable\">\r\n          <tr>\r\n            <td>{this.printanswer(this.showCount)}</td>\r\n          </tr>\r\n        </table>\r\n        <div className=\"tick-wrapper\">\r\n          <div id=\"trigger\" />\r\n          <svg id=\"tick\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 37 37\">\r\n            <polyline\r\n              className=\"tick path \"\r\n              points=\"11.6,9.2 15.9,13.4 26.4,3\"\r\n              fill=\"none\"\r\n              stroke=\"#FF4500\"\r\n              strokeWidth=\"3\"\r\n              strokeLinejoin=\"round\"\r\n              strokeMiterlimit=\"10\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnswerField;\r\n","import React, { Component } from 'react';\r\n\r\nclass Timer extends Component {\r\n  intval;\r\n  state;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      \"time\": this.props.timeLimit\r\n    };\r\n    this.set();\r\n  }\r\n\r\n  set() {\r\n    this.setState({\r\n      \"time\": this.props.timeLimit,\r\n      \"pause\" : false\r\n    });\r\n    this.intval = setInterval(()=> {\r\n      if(!this.state.pause) {\r\n        var x = this.state.time - 1;\r\n        this.setState({\r\n          \"time\" : x\r\n        });\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    if(this.state.pause && this.state.time > 0) {\r\n      if(this.props.running) {\r\n        this.setState({\r\n          \"pause\" : false\r\n        });\r\n      }\r\n    }\r\n\r\n    else if(!this.props.running && this.state.time > 0) {\r\n      this.setState({\r\n        \"pause\" : true\r\n      });\r\n    }\r\n    else if(this.state.time <= 0 && !this.props.timesout) {\r\n      clearInterval(this.intval);\r\n      this.props.onTimeOut();\r\n    }\r\n    return (\r\n      <>\r\n        Time: {this.props.timesout? \"Time's Out!\" : this.state.time + \"s\"}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React, { Component } from \"react\";\r\nimport WordCardTr from \"./WordCardTr.js\";\r\nimport AnswerField from \"./AnswerField.js\";\r\nimport Timer from \"./Timer.js\";\r\nimport \"./GamePage.css\";\r\n\r\nclass GamePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var c = this.props.counter;\r\n    this.state = {\r\n      counter: c,\r\n      question: this.props.data.pages[c].question,\r\n      image_src: this.props.data.pages[c].image_src,\r\n      answers: Array.from(new Set(this.props.data.pages[c].answers)),\r\n      originAnsArr: this.props.data.pages[c].answers,\r\n      ans_length: this.props.data.pages[c].ans_length,\r\n      quesScore: this.props.data.pages[c].score,\r\n      correctans: this.props.data.pages[c].correctans,\r\n      rightquestion: this.props.data.pages[c].rightquestion,\r\n      questionlength : this.props.data.pages[c].question.length,\r\n      correct_count: 0,\r\n      wrong_click_count: 0,\r\n      timeOut: false,\r\n      totalScore: 0,\r\n      scorePerQues: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.counter === 0) {\r\n      var c = 0;\r\n      this.setState({\r\n        counter: c,\r\n        question: this.props.data.pages[c].question,\r\n        image_src: this.props.data.pages[c].image_src,\r\n        answers: Array.from(new Set(this.props.data.pages[c].answers)),\r\n        originAnsArr: this.props.data.pages[c].answers,\r\n        ans_length: this.props.data.pages[c].ans_length,\r\n        quesScore: this.props.data.pages[c].score,\r\n        correctans: this.props.data.pages[c].correctans,\r\n        rightquestion: this.props.data.pages[c].rightquestion,\r\n        questionlength : this.props.data.pages[c].question.length,\r\n        correct_count: 0,\r\n        wrong_click_count: 0,\r\n        timeOut: false,\r\n        giveTips: false,\r\n        totalScore: 0,\r\n        scorePerQues: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  shuffle(n) {\r\n    var a = [];\r\n    for (var i = 0; i < n.length; i++) {\r\n      a[i] = n[i];\r\n    }\r\n    var j, x, i;\r\n    for (i = a.length - 1; i > 0; i--) {\r\n      j = Math.floor(Math.random() * (i + 1));\r\n      x = a[i];\r\n      a[i] = a[j];\r\n      a[j] = x;\r\n    }\r\n    return a;\r\n  }\r\n\r\n  getGameQuestion() {\r\n    document.getElementById(\"trigger\").classList.remove(\"drawn\");\r\n    //document.getElementsByClassName(\"answerFieldTable\")[0].children[0].style.backgroundColor = \"lightgreen\";\r\n    var elms = document.getElementsByClassName(\"answerFieldTable\")[0]\r\n      .children[0].children[0].children;\r\n    for (var i = 0; i < elms.length; i++) {\r\n      elms[i].style.backgroundColor = \"\";\r\n    }\r\n    if (\r\n      this.state.counter + 1 < this.props.data.pages.length &&\r\n      !this.state.timeOut\r\n    ) {\r\n      var c = this.state.counter + 1;\r\n      this.setState({\r\n        counter: c,\r\n        question: this.props.data.pages[c].question,\r\n        image_src: this.props.data.pages[c].image_src,\r\n        answers: Array.from(new Set(this.props.data.pages[c].answers)),\r\n        originAnsArr: this.props.data.pages[c].answers,\r\n        ans_length: this.props.data.pages[c].ans_length,\r\n        quesScore: this.props.data.pages[c].score,\r\n        correctans: this.props.data.pages[c].correctans,\r\n        rightquestion: this.props.data.pages[c].rightquestion,\r\n        questionlength : this.props.data.pages[c].question.length,\r\n        correct_count: 0,\r\n        wrong_click_count: 0,\r\n        timeOut: false,\r\n        giveTips: false,\r\n      });\r\n    } else {\r\n      this.props.onGameFinish(\r\n        this.state.totalScore,\r\n        this.state.scorePerQues,\r\n        this.props.data.pages.length\r\n      );\r\n      this.props.jumpToNextPage(\"Game Finish\", \"EndPage\");\r\n    }\r\n  }\r\n\r\n  onWordClick(word) {\r\n    console.log(word);\r\n    if (\r\n      word ===\r\n      this.state.correctans[\r\n        this.state.giveTips\r\n          ? Math.floor(this.state.ans_length / 2) + this.state.correct_count\r\n          : this.state.correct_count\r\n      ]\r\n    ) {\r\n      console.log(this.state.questionlength);\r\n      var x = this.state.correct_count + 1;\r\n      this.setState({\r\n        correct_count: x,\r\n      });\r\n      if (\r\n        (this.state.giveTips\r\n          ? Math.floor(this.state.ans_length / 2) + this.state.correct_count\r\n          : this.state.correct_count) >=\r\n        this.state.ans_length - 1\r\n      ) {\r\n        var x;\r\n        var q = this.state.scorePerQues;\r\n        if (this.state.giveTips) {\r\n          x = this.state.totalScore + Math.floor(this.state.quesScore / 2);\r\n          q.push(Math.floor(this.state.quesScore / 2));\r\n        } else {\r\n          x = this.state.totalScore + this.state.quesScore;\r\n          q.push(this.state.quesScore);\r\n        }\r\n        this.setState({\r\n          totalScore: x,\r\n          scorePerQues: q,\r\n        });\r\n      }\r\n      return true;\r\n    } else {\r\n      var x = this.state.wrong_click_count + 1;\r\n      this.setState({\r\n        wrong_click_count: x,\r\n      });\r\n      if (\r\n        !this.state.giveTips &&\r\n        x >= Math.floor(this.state.ans_length / 2) &&\r\n        this.state.correct_count < Math.floor(this.state.ans_length / 2)\r\n      ) {\r\n        this.setState({\r\n          correct_count: 0,\r\n          giveTips: true,\r\n        });\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  onTimeOut() {\r\n    this.setState({\r\n      timeOut: true,\r\n    });\r\n  }\r\n\r\n  printquestion = () => {\r\n    let tmp = [\"\"];\r\n    const question= Array.from(this.state.question);\r\n\r\n    if (this.state.rightquestion===\"\")\r\n    question.map((value,index)=>{\r\n\r\n\r\n      tmp.push(<div className= { this.state.giveTips\r\n        ? Math.floor(this.state.ans_length / 2) + this.state.correct_count===index?\"question_highlighted\": \"question\":index===this.state.correct_count ? \"question_highlighted\" : \"question\"}>{value}</div>);\r\n    })\r\n    else{\r\n      question.map((value,index)=>{\r\n\r\n\r\n        tmp.push(<div className= { this.state.giveTips\r\n          ?  this.state.rightquestion[Math.floor(this.state.ans_length / 2) +this.state.correct_count]===index?\"question_highlighted\": \"question\":index===this.state.rightquestion[this.state.correct_count] ? \"question_highlighted\" : \"question\"}>{value}</div>);\r\n      })\r\n\r\n    }\r\n    return tmp;\r\n  }\r\n\r\n  GameMain(props) {\r\n    if (props.states.timeOut) {\r\n      return (\r\n        <div\r\n          className=\"nextQuestionButton\"\r\n          onClick={props.me.getGameQuestion.bind(props.me)}\r\n        >\r\n          <h3>Next Question</h3>\r\n        </div>\r\n      );\r\n    } else if (\r\n      (props.states.giveTips\r\n        ? Math.floor(props.states.ans_length / 2) + props.states.correct_count\r\n        : props.states.correct_count) < props.states.ans_length\r\n    ) {\r\n      return (\r\n        <table className=\"word-list-table w3-container\">\r\n          <WordCardTr\r\n            wordList={props.states.answers}\r\n            wordClick={props.me.onWordClick.bind(props.me)}\r\n          />\r\n        </table>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          className=\"nextQuestionButton\"\r\n          onClick={props.me.getGameQuestion.bind(props.me)}\r\n        >\r\n          <h3>Next Question</h3>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <table className=\"game-page-body\">\r\n        <tr className=\"game-page-top\">\r\n          <td>\r\n            <AnswerField\r\n              giveTips={this.state.giveTips}\r\n              correctAns={this.state.correctans}\r\n              rightquestion={this.state.rightquestion}\r\n              correctCount={this.state.correct_count}\r\n              wrongCount={this.state.wrong_click_count}\r\n              timesout={this.state.timeOut}\r\n              questionlength={this.state.questionlength}\r\n            />\r\n            <table className=\"questionTable\"><td><tr>{this.printquestion()}</tr></td></table>\r\n            {this.state.image_src === \"\" ? (\r\n              \"\"\r\n            ) : (\r\n              <p>\r\n                <img className=\"question-img\" src={this.state.image_src} />\r\n              </p>\r\n            )}\r\n            <div className=\"gameStat\">\r\n              <div className=\"leftElm\">\r\n                <span>\r\n                  <Timer\r\n                    timeLimit={this.props.data.time_limit}\r\n                    running={\r\n                      (this.state.giveTips\r\n                        ? Math.floor(this.state.ans_length / 2) +\r\n                          this.state.correct_count\r\n                        : this.state.correct_count) < this.state.ans_length\r\n                    }\r\n                    onTimeOut={this.onTimeOut.bind(this)}\r\n                    timesout={this.state.timeOut}\r\n                  />\r\n                </span>\r\n              </div>\r\n              <div className=\"rightElm\">\r\n                <span>Score: {this.state.totalScore}</span>\r\n              </div>\r\n            </div>\r\n            <br />\r\n          </td>\r\n        </tr>\r\n        <tr className=\"game-page-btm\">\r\n          <td>\r\n            <this.GameMain states={this.state} me={this} />\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GamePage;\r\n","import React, { Component } from 'react';\r\nimport './EndPage.css'\r\nimport {SCORM} from 'pipwerks-scorm-api-wrapper';\r\n\r\nclass EndPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  endGame = () => {\r\n    SCORM.save();\r\n    SCORM.quit();\r\n  }\r\n\r\n  restartGame = () => {\r\n    this.props.onGameRestart('普樂網 demo', 'GamePage');\r\n    //document.location.reload(true);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <tr className=\"end-page-top\">\r\n          <td>\r\n            <h1 className=\"start-page-welcomePhrase\">Final Score: {this.props.finalScore}</h1>\r\n            <div className=\"end-page-endButton\" onClick={this.endGame}><h3>Exit</h3></div>\r\n            <div className=\"end-page-restartButton\" onClick={this.restartGame}><h3>Restart</h3></div>\r\n          </td>\r\n        </tr>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EndPage;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport StartPage from './component/start-page/StartPage.js';\nimport GamePage from './component/game-page/GamePage.js';\nimport EndPage from './component/start-page/EndPage.js';\nimport Questiondata from './question-data.json'\nimport {SCORM} from 'pipwerks-scorm-api-wrapper';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    SCORM.init();\n  }\n  state = {\n    titleName : '普樂網 demo',\n    pageName : 'StartPage',\n    gamePageCounter : -1,\n    data: null\n  }\n\n  componentDidMount() {\n\n        \n        \n        var totalFullScore = 0;\n        for(var i = 0; i < Questiondata.pages.length; i++) {\n          totalFullScore += Questiondata.pages[i].score;\n        }\n        this.setState({\n          totalFullScore: totalFullScore\n        });\n      \n  }\n\n  jumpToPage = (title, page) => {\n    if(page == 'GamePage') {\n      var x = this.state.gamePageCounter + 1;\n      this.setState({\n        'titleName' : title,\n        'pageName' : page,\n        'gamePageCounter' : x\n      });\n    }\n    else {\n      this.setState({\n        'titleName' : title,\n        'pageName' : page,\n        'gamePageCounter': -1\n      });\n    }\n  }\n\n  submitToScorm = (finalScore, scoreArr, totalQNum) => {\n    // window.onbeforeunload = function(event) {\n      // await event.preventDefault();\n      // **this function must be use\n      // to indicate that the course is finished**\n      SCORM.set(\"cmi.core.lesson_status\", \"completed\");\n\n      // **this cmi.interactions._count must be used\n      // instead of a tailor-made counter**\n      var n = SCORM.get(\"cmi.interactions._count\") || 0;\n      var totalFullScore = 0;\n      for(var i = 0; i < totalQNum; i++) {\n        SCORM.set(\"cmi.interactions.\" + i + \".id\", \"Question \" + (i+1));\n        SCORM.set(\"cmi.interactions.\" + i + \".result\", 0);\n      }\n      for (var i = 0; i < scoreArr.length; i++) {\n          SCORM.set(\"cmi.interactions.\" + i + \".id\", \"Question \" + (i+1));\n          SCORM.set(\"cmi.interactions.\" + i + \".result\", scoreArr[i]);\n          n++;\n      }\n      SCORM.set(\"cmi.core.score.raw\", parseInt((finalScore / this.state.totalFullScore) * 100));\n\n    // }\n  }\n\n  onGameFinish = (finalScore, scoreArr, totalQNum) => {\n    this.setState({\n      \"finalScore\" : finalScore\n    });\n    this.submitToScorm(finalScore, scoreArr, totalQNum);\n  }\n\n  shuffle(n) {\n    var a = [];\n    for(var i = 0; i < n.length; i++) {\n      a[i] = n[i];\n    }\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n  }\n\n  Tbody = (props) => {\n    if(props.me.state.pageName === 'StartPage') {\n      return (<StartPage onGameStart={props.me.jumpToPage}/>);\n    }\n    else if(props.me.state.pageName === 'GamePage') {\n      console.log(Questiondata.pages[0].correctans);\n      return (<GamePage data={Questiondata} onGameFinish={props.me.onGameFinish.bind(props.me)} jumpToNextPage={props.me.jumpToPage} counter={props.me.state.gamePageCounter}/>)\n    }\n    else {\n      return (<EndPage onGameRestart={props.me.jumpToPage} finalScore={props.me.state.finalScore}/>)\n    }\n  }\n  render() {\n    return (\n      <table id=\"page\">\n        <thead className=\"w3-container\">\n        {this.state.titleName}\n        </thead>\n          <tbody className=\"w3-container\">\n            <this.Tbody me={this}/>\n          </tbody>\n      </table>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}